;!zprint {:style [:respect-nl] :width 140}

{:paths   ["src"]

 :deps    {org.clojure/clojure {:mvn/version "1.11.1"}

           ;; Clojure wrapper of OpenTelemetry API
           com.github.steffan-westcott/clj-otel-api {:local/root "../../clj-otel-api"}

           ;; Clojure wrapper of autoconfigure OpenTelemetry SDK extension
           com.github.steffan-westcott/clj-otel-sdk-extension-autoconfigure
           {:local/root "../../clj-otel-sdk-extension-autoconfigure"}

           ;; Clojure wrapper of JVM metrics instrumentation
           com.github.steffan-westcott/clj-otel-instrumentation-runtime-telemetry-java8
           {:local/root "../../clj-otel-instrumentation-runtime-telemetry-java8"}}

 :aliases {;; Autoconfiguration properties and selected dependencies
           :otel       {:jvm-opts   [;; Name the instrumented application or service
                                     "-Dotel.resource.attributes=service.name=divisor-app"

                                     ;; Export metrics to Prometheus via HTTP server for scraping
                                     "-Dotel.metrics.exporter=prometheus"

                                     ;; Set metric export to every 10 seconds
                                     "-Dotel.metric.export.interval=10000"

                                     ;; Disable logs export
                                     "-Dotel.logs.exporter=none"]

                        :extra-deps {;; Automatically add various OpenTelemetry resources to exported telemetry
                                     io.opentelemetry.instrumentation/opentelemetry-resources {:mvn/version "1.32.0-alpha"}

                                     ;; Enable export of telemetry using OpenTelemetry Protocol (OTLP)
                                     io.opentelemetry/opentelemetry-exporter-otlp       {:mvn/version "1.34.0"}

                                     ;; Enable export of metrics to Prometheus via HTTP server for scraping
                                     io.opentelemetry/opentelemetry-exporter-prometheus {:mvn/version "1.34.0-alpha"}

                                    }}

           ;; Include this alias for the OTLP exporter gRPC implementation to use Netty transport instead of default OkHttp
           :grpc-netty {:extra-deps {io.grpc/grpc-netty-shaded {:mvn/version "1.60.1"}
                                     io.grpc/grpc-protobuf     {:mvn/version "1.60.1"}
                                     io.grpc/grpc-stub         {:mvn/version "1.60.1"}}}

          }}
