services:

  # Example microservice sum-service
  sum-service:
    image: example.clj-otel/sum-service:latest
    env_file: compose.env
    ports:
      - "8091:8091"      # nREPL server
    depends_on:
      otel-collector:
        condition: service_started

  # Example microservice average-service
  average-service:
    image: example.clj-otel/average-service:latest
    env_file: compose.env
    environment:
      SERVER: ${SERVER}  # Select "sync", "bound-async" or "explicit-async" example server
    ports:
      - "8090:8090"      # nREPL server
    depends_on:
      sum-service:
        condition: service_healthy
      otel-collector:
        condition: service_started

  # Load generator for average-service
  average-load-gen:
    image: example.clj-otel/average-load-gen:latest
    env_file: compose.env
    ports:
      - "8092:8092"      # nREPL server
    depends_on:
      average-service:
        condition: service_healthy

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml
    command:
      - --config=/etc/otel-collector.yaml
    depends_on:
      jaeger:
        condition: service_started
      prometheus:
        condition: service_started

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:latest
    command:
      - --collector.otlp.enabled=true
    ports:
      - "16686:16686"    # Jaeger web interface

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"      # Prometheus web interface
